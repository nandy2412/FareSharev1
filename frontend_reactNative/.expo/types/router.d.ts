/* eslint-disable */
import * as Router from 'expo-router';

export * from 'expo-router';

declare module 'expo-router' {
  export namespace ExpoRouter {
    export interface __routes<T extends string | object = string> {
      hrefInputParams: { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/firebaseConfig`; params?: Router.UnknownInputParams; } | { pathname: `/`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(no_tabs)'}/host` | `/host`; params?: Router.UnknownInputParams; } | { pathname: `${'/(no_tabs)'}/login` | `/login`; params?: Router.UnknownInputParams; } | { pathname: `${'/(no_tabs)'}/mapview` | `/mapview`; params?: Router.UnknownInputParams; } | { pathname: `${'/(no_tabs)'}/past_ride` | `/past_ride`; params?: Router.UnknownInputParams; } | { pathname: `${'/(no_tabs)'}/register` | `/register`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/profile` | `/profile`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/ride` | `/ride`; params?: Router.UnknownInputParams; } | { pathname: `/styles/global`; params?: Router.UnknownInputParams; } | { pathname: `/utils/locationService`; params?: Router.UnknownInputParams; } | { pathname: `/+not-found`, params: Router.UnknownInputParams & {  } } | { pathname: `${'/(no_tabs)'}/groups/[groupID]` | `/groups/[groupID]`, params: Router.UnknownInputParams & { groupID: string | number; } } | { pathname: `${'/(no_tabs)'}/rides/[rideID]` | `/rides/[rideID]`, params: Router.UnknownInputParams & { rideID: string | number; } };
      hrefOutputParams: { pathname: Router.RelativePathString, params?: Router.UnknownOutputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownOutputParams } | { pathname: `/firebaseConfig`; params?: Router.UnknownOutputParams; } | { pathname: `/`; params?: Router.UnknownOutputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(no_tabs)'}/host` | `/host`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(no_tabs)'}/login` | `/login`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(no_tabs)'}/mapview` | `/mapview`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(no_tabs)'}/past_ride` | `/past_ride`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(no_tabs)'}/register` | `/register`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/profile` | `/profile`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/ride` | `/ride`; params?: Router.UnknownOutputParams; } | { pathname: `/styles/global`; params?: Router.UnknownOutputParams; } | { pathname: `/utils/locationService`; params?: Router.UnknownOutputParams; } | { pathname: `/+not-found`, params: Router.UnknownOutputParams & {  } } | { pathname: `${'/(no_tabs)'}/groups/[groupID]` | `/groups/[groupID]`, params: Router.UnknownOutputParams & { groupID: string; } } | { pathname: `${'/(no_tabs)'}/rides/[rideID]` | `/rides/[rideID]`, params: Router.UnknownOutputParams & { rideID: string; } };
      href: Router.RelativePathString | Router.ExternalPathString | `/firebaseConfig${`?${string}` | `#${string}` | ''}` | `/${`?${string}` | `#${string}` | ''}` | `/_sitemap${`?${string}` | `#${string}` | ''}` | `${'/(no_tabs)'}/host${`?${string}` | `#${string}` | ''}` | `/host${`?${string}` | `#${string}` | ''}` | `${'/(no_tabs)'}/login${`?${string}` | `#${string}` | ''}` | `/login${`?${string}` | `#${string}` | ''}` | `${'/(no_tabs)'}/mapview${`?${string}` | `#${string}` | ''}` | `/mapview${`?${string}` | `#${string}` | ''}` | `${'/(no_tabs)'}/past_ride${`?${string}` | `#${string}` | ''}` | `/past_ride${`?${string}` | `#${string}` | ''}` | `${'/(no_tabs)'}/register${`?${string}` | `#${string}` | ''}` | `/register${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}${`?${string}` | `#${string}` | ''}` | `/${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/profile${`?${string}` | `#${string}` | ''}` | `/profile${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/ride${`?${string}` | `#${string}` | ''}` | `/ride${`?${string}` | `#${string}` | ''}` | `/styles/global${`?${string}` | `#${string}` | ''}` | `/utils/locationService${`?${string}` | `#${string}` | ''}` | { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/firebaseConfig`; params?: Router.UnknownInputParams; } | { pathname: `/`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(no_tabs)'}/host` | `/host`; params?: Router.UnknownInputParams; } | { pathname: `${'/(no_tabs)'}/login` | `/login`; params?: Router.UnknownInputParams; } | { pathname: `${'/(no_tabs)'}/mapview` | `/mapview`; params?: Router.UnknownInputParams; } | { pathname: `${'/(no_tabs)'}/past_ride` | `/past_ride`; params?: Router.UnknownInputParams; } | { pathname: `${'/(no_tabs)'}/register` | `/register`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/profile` | `/profile`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/ride` | `/ride`; params?: Router.UnknownInputParams; } | { pathname: `/styles/global`; params?: Router.UnknownInputParams; } | { pathname: `/utils/locationService`; params?: Router.UnknownInputParams; } | `/+not-found` | `${'/(no_tabs)'}/groups/${Router.SingleRoutePart<T>}` | `/groups/${Router.SingleRoutePart<T>}` | `${'/(no_tabs)'}/rides/${Router.SingleRoutePart<T>}` | `/rides/${Router.SingleRoutePart<T>}` | { pathname: `/+not-found`, params: Router.UnknownInputParams & {  } } | { pathname: `${'/(no_tabs)'}/groups/[groupID]` | `/groups/[groupID]`, params: Router.UnknownInputParams & { groupID: string | number; } } | { pathname: `${'/(no_tabs)'}/rides/[rideID]` | `/rides/[rideID]`, params: Router.UnknownInputParams & { rideID: string | number; } };
    }
  }
}
